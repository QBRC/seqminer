## CC and CXX are set up by INSTALL, no need to use them here.
## CC=@CC@
## CXX=@CXX@

PKG_CFLAGS=@PKG_CFLAGS@
PKG_CXX1XFLAGS=@PKG_CXX1XFLAGS@
PKG_LIBS=@PKG_LIBS@

## ## uncomment below to enable debugging
## ##  use `R -d gdb` to start,
## ##  type `c` to start R
## ##  type `library(seqminer)` to load the package
## ##  type `Ctrl+C` to return to GDB and set breakpoints
## PKG_CFLAGS+=-O0 -ggdb
## PKG_CXXFLAGS+=-O0 -ggdb


## Regular expression
## We first check regex.h provided by libc.
## NOTE: we will not use PCRE posix because of potential
## linking problem. For example, when we include <pcreposix.h>,
## during linking, libc library may be used instead of the pcre library. 
## That will crash our program. So we wont use PCRE (@LIB_PCRE@).

## use SQLITE
PKG_CXX1XFLAGS+=-I. \
             -DRSQLITE_USE_BUNDLED_SQLITE \
             -DSQLITE_ENABLE_RTREE \
             -DSQLITE_ENABLE_FTS3 \
             -DSQLITE_ENABLE_FTS3_PARENTHESIS \
             -DSQLITE_ENABLE_FTS5 \
             -DSQLITE_ENABLE_JSON1 \
             -DSQLITE_ENABLE_STAT4 \
             -DSQLITE_SOUNDEX

# R_HOME=$(shell R RHOME)
# ZSTDR_CFLAGS=$("${R_HOME}/bin/R" CMD config CFLAGS)
# zstd/lib/libzstd.a:
# 	cd src/zstd && make lib CFLAGS="${ZSTDR_CFLAGS} -fPIC"

PKG_LIBS += sqlite/sqlite3.o zstd/lib/libzstd.a

$(SHLIB): $(PKG_LIBS)
